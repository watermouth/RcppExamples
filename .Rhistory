tsp(y[1:10])
y[1:10]
h <- y[1:10]
h
str(1)
str(h)
y
str(y)
date(y)
plot(y)
tsp(y)
12*400
clear()
rm()
x
x <- matrices(c(1:3, c(2:4)), nrow=3)
x <- matrix(c(1:3, c(2:4)), nrow=3)
x
b <- x[,2] >=3
b
x[b,]
x[x>=3,]
x[x[,2]>=3,]
x[,2]
x[1,]
x[True]
x[T]
x[c(T,F)]
x[1]
z <- c(5,12,13)
z
x[z %% 2 == 1, ]
5 %% 2
m <- matrix(c(1:3,c(4:6)), nrow=3)
m
m[m[,1]>1 & m]
m[m[,1]>1 & m[,2]>5]
m[m[,1]>1 & m[,2]>5,]
a <- m[m[,1]>1 & m[,2]>5,]
a
str(a)
c(3,6)
b <- c(3,6)
str(b)
b
bb <- c(3:6)
bb
str(bb)
m
m <- matrix(c(5,2,9, c(-1,10,11)), nrow=3)
m
which(m>2)
row(m)
row(m[2,3])
row(m[3,2])
m
str(m)
m <- matrix(c(5,2,9, c(-1,10,11)), nrow=3)
m
str(m)
class(m)
mode(m)
typeof(m)
row(m[2,2])
row(m[2])
row(m[2,])
row(m)
m
row(m)
col(m)
mvrnorm()
MASS::mvrnorm()
open(MASS)
library(MASS)
require(MASS)
require(MASS)
library(MASS)
warnings()
rm()
require(MASS)
library(MASS)
mvrnorm()
source('~/Development/R/makecov.R')
source('~/Development/R/makecov.R')
makecov(0.2,3)
?apply
z <- matrix(c(1:6), nrow=3)
z
apply(z, 2, mean)
colMeans(z,2)
z
f <- function(x) x/c(2,8)
y <- apply(z, 1, f)
y
t(y)
source('~/Development/R/copymaj.R')
source('~/Development/R/copymaj.R')
x <- matrix(c(1,1,1,0,0,1,0,1,1,1,0,1,1,1,1,1,0,0,1,0), nrow=4)
x
copymaj(x[,1])
copymaj(x[,1], 3)
copymaj(x[,1], 2)
copymaj(x[,1], 1)
copymaj(x[,2], 1)
copymaj(x[,2], 2)
copymaj(x[,2], 3)
copymaj(x[,2], 4)
copymaj(x[,3], 4)
copymaj(x[,3], 3)
copymaj(x[,3], 2)
copymaj(x[,3], 3)
apply(x, dim=2, copymaj, 4)
apply(x, 2, copymaj, 4)
apply(x, dim=2, copymaj, ...=4)
apply(x, dim=2, FUJ=copymaj, ...=4)
apply(x, dim=2, FUJ=copymaj,4)
apply(x, dim=2, FUN=copymaj,4)
x
apply(x, 2, copymaj, 1)
apply(x, 2, copymaj, 2)
apply(x, 2, copymaj, 3)
apply(x, 2, copymaj, 4)
apply(x, 1, copymaj, 1)
apply(x, 1, copymaj, 2)
apply(x, 1, copymaj, 3)
apply(x, 1, copymaj, 4)
source('~/Development/R/findols.R')
findols(1:10)
x <- 1:10
x
dim(x)
x <- matrix(x)
x
findols(x)
findols(x)
source('~/Development/R/findols.R')
source('~/Development/R/findols.R')
findols(x)
findols(x)
findols(t(x))
t(x)
y <- c(x,1)
y
findols(y)
findols(matrix(y, nrow=1)
)
y <- rbind(y)
y
findols(y)
x
y
z <- rbind(y, y^2)
z
z <- rbind(y, y^2, sqrt(y))
z <- rbind(y, y^2, sqrt(y))
z
findols(y)
source('~/Development/R/findols.R')
findols(y)
source('~/Development/R/findols.R')
findols(y)
findols(z)
a <- findols(z)
a
b <- a
a
b
str(z)
str(a)
names(a)
names(a) <- NULL
a
str(a)
z
str(z)
names(z)
z
z
z[,1]
z[,2]
z[12]
z[1]
z[1,]
class(z)
attributes(z)
y
z
attributes(z)
z$dimnames <- NULL
z
z
attributes(z)
str(z)
y
z <- rbind(y)
z
z <- rbind(y, sqrt(y))
z
?rbind
z <- rbind(y, sqrt(y), deparse.level=0)
z
z <- rbind(y, sqrt(y), deparse.level=1)
z
z <- rbind(y, sqrt(y), deparse.level=2)
z
y
zz <- matrix(c(y,sqrt(y)), nrow=2)
zz
z
zz <- matrix(c(y,sqrt(y)), nrow=2)
zz
z <- rbind(y, sqrt(y))
z
attributes(z)
zz
findols(zz)
y
zz <- matrix(t(c(y,sqrt(y))), nrow=2)
zz
zz <- matrix(c(y,sqrt(y)), nrow=2)
zz
zz <- matrix(c(y,sqrt(y)), ncol=2)
zz
t(zz)
one
ones
ones()
one()
one
one <- rep(1,4)
one
source('~/Development/R/mind.R')
mind()
q <- sample(1:25)
q
q <- matrix(q, nrow=5)
q
mind(q)
source('~/Development/R/mind.R')
source('~/Development/R/mind.R')
q
mind(q)
edit("mind.R")
source('~/Development/R/KalmanFilter/KalmanFilter_1.R')
source('~/Development/R/KalmanFilter/SampleImplementation_HandyKalmanFilter_1.R')
testHandyKalmanFilter()
testHandyKalmanFilter()
source('~/Development/R/KalmanFilter/SampleImplementation_HandyKalmanFilter_1.R')
testHandyKalmanFilter()
source('~/Development/R/KalmanFilter/SampleImplementation_HandyKalmanFilter_1.R')
testHandyKalmanFilter()
source('~/.active-rstudio-document')
testHandyKalmanFilter()
source('~/.active-rstudio-document')
library("fkf")
library(fkf)
library(FKF)
?fkf
source('~/.active-rstudio-document')
n <- 1000
## Set the AR parameters
ar1 <- 0.6
ar2 <- 0.2
ma1 <- -0.2
sigma <- sqrt(0.2)
## Sample from an ARMA(2, 1) process
a <- arima.sim(model = list(ar = c(ar1, ar2), ma = ma1), n = n,
innov = rnorm(n) * sigma)
a
ar
ar1
ar2
ar
?ar
a
plot(a)
## Create a state space representation out of the four ARMA parameters
arma21ss <- function(ar1, ar2, ma1, sigma) {
Tt <- matrix(c(ar1, ar2, 1, 0), ncol = 2)
Zt <- matrix(c(1, 0), ncol = 2)
ct <- matrix(0)
dt <- matrix(0, nrow = 2)
GGt <- matrix(0)
H <- matrix(c(1, ma1), nrow = 2) * sigma
HHt <- H %*% t(H)
a0 <- c(0, 0)
P0 <- matrix(1e6, nrow = 2, ncol = 2)
return(list(a0 = a0, P0 = P0, ct = ct, dt = dt, Zt = Zt, Tt = Tt, GGt = GGt,
HHt = HHt))
}
objective <- function(theta, yt) {
sp <- arma21ss(theta["ar1"], theta["ar2"], theta["ma1"], theta["sigma"])
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt, yt = yt)
return(-ans$logLik)
}
theta <- c(ar = c(0, 0), ma1 = 0, sigma = 1)
fit <- optim(theta, objective, yt = rbind(a), hessian = TRUE)
fit
rbind(fit$par - qnorm(0.975) * sqrt(diag(solve(fit$hessian))),
fit$par + qnorm(0.975) * sqrt(diag(solve(fit$hessian))))
sp <- arma21ss(fit$par["ar1"], fit$par["ar2"], fit$par["ma1"], fit$par["sigma"])
ans <- fkf(a0 = sp$a0, P0 = sp$P0, dt = sp$dt, ct = sp$ct, Tt = sp$Tt,
Zt = sp$Zt, HHt = sp$HHt, GGt = sp$GGt, yt = rbind(a))
sp
ans
plot(ans, at.idx = 1, att.idx = NA, CI = NA)
lines(a, lty = "dotted")
## Compare the filtered series with the realization
plot(ans, at.idx = NA, att.idx = 1, CI = NA)
lines(a, lty = "dotted")
plot(ans, type = "resid.qq")
plot(ans, type = "acf")
?fkf
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter()
testHandyKalmanFilter()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter2()
HandyObj <- HandyKalmanFilter(a0=a0,P0=P0,yt=yt[1:numForEstimation],HHt=HHt,GGt=GGt)
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter2()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter2()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter2()
testHandyKalmanFilter()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter()
testHandyKalmanFilter2()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter2()
testHandyKalmanFilter()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter()
testHandyKalmanFilter2()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter2()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter2()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter2()
testHandyKalmanFilter2()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter2()
testHandyKalmanFilter1()
testHandyKalmanFilter()
testHandyKalmanFilter2()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter2()
testHandyKalmanFilter2()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter2()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter2()
testHandyKalmanFilter2(F)
testHandyKalmanFilter2(T)
source('~/.active-rstudio-document')
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter2(T)
P0
a0
i_yt
estimatedStates
head(estimatedStates)
HandyObj
HandyObj$fitObj
?opti
?optim
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
Q
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter()
testHandyKalmanFilter(F)
testHandyKalmanFilter2()
testHandyKalmanFilter2(F)
testHandyKalmanFilter2(T)
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter2(T)
testHandyKalmanFilter2()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter2()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter2()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter2()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter2()
a <- testHandyKalmanFilter2()
a
a$es
a$eswf
plot(a$eswf$GGts)
source('~/.active-rstudio-document')
a <- testHandyKalmanFilter2()
a
plot(a$eswf$GGts)
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
a <- testHandyKalmanFilter2()
plot(a$eswf$GGts)
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
a <- testHandyKalmanFilter2()
plot(a$eswf$GGts)
?optim
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
a <- testHandyKalmanFilter2()
plot(a$eswf$GGts)
a$eswf$GGts
a$eswf
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
a <- testHandyKalmanFilter2()
a$eswf
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
a <- testHandyKalmanFilter2()
a
a$eswf
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
a$eswf
a <- testHandyKalmanFilter2()
a$eswf
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter()
source('~/Development/R/KalmanFilter/HandyKalmanFilter.R')
testHandyKalmanFilter()
testHandyKalmanFilter(T)
testHandyKalmanFilter2()
Rcpp::sourceCpp('Development/R/Rcpp/HandlingDataFrameExample.cpp')
ex7(df7,1:2)
Rcpp::sourceCpp('Development/R/Rcpp/HandlingDataFrameExample.cpp')
Rcpp::sourceCpp('Development/R/Rcpp/HandlingDataFrameExample.cpp')
out76
out7
Rcpp::sourceCpp('Development/R/Rcpp/HandlingDataFrameExample.cpp')
out7
out6
out5
out4
df5
df3
df3
Rcpp::sourceCpp('Development/R/Rcpp/HandlingDataFrameExample.cpp')
df4
df3
out3 <- ex3(df3,1)
out3
df3
df3
out3 <- ex3(df3,1)
df
out3 <- ex3(df3,1)
df3
df4
source('~/.active-rstudio-document')
Rcpp::sourceCpp('Development/R/Rcpp/HandlingDataFrameExample2.cpp')
Rcpp::sourceCpp('Development/R/Rcpp/HandlingDataFrameExample2.cpp')
df14
tail(df14)
Rcpp::sourceCpp('Development/R/Rcpp/HandlingDataFrameExample2.cpp')
Rcpp::sourceCpp('Development/R/Rcpp/HandlingDataFrameExample2.cpp')
getwd()
setwd("./Development/R/Rcpp/")
ls()
rm(list=ls())
.f <- function() 100
ls()
.f()
f
f()
ls()
ls(all.names=T)
install.packages("Matrix")
?Matrix
??Matrix
install.packages("RcppArmadillo")
help(package=Rcpp)
help(package=RcppArmadilo)
??Arlma
evalCpp()
library(Rcpp)
evalCpp(code='std::numeric_limits<double>::max()')
cppFunction('
int fibonacci(const int x) {
if (x < 2)
return x;
else
return (fibonacci(x - 1)) + fibonacci(x - 2);
}
')
fibonacci(x=2)
fibonacci(x=1)
